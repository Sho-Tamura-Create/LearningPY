'''
2018/12/9

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
'''

import math
import collections
from functools import reduce
from operator import add, mul

tri_num = 0
cn = 2
div = []
corect = []

def primeNum(n):
    i = 2
    tbl = []
    while i * i <= n:
        while n % i == 0:
            n /= i
            tbl.append(i)
        i += 1
    if n > 1:
        tbl.append(n)
    return tbl

while True:
    corect.clear()
    div.clear()
    tri_num = 0

    for i in range (1,cn+1):
        tri_num += i

    print(tri_num)
    div = primeNum(tri_num)
    c = collections.Counter(div)

    for j in c.values():
        corect.append(j+1)

        print(corect)
        mul_sum = reduce(mul,corect)

    if mul_sum >= 500:
        print(tri_num)
        print(mul_sum)
        break
    cn += 1
    
